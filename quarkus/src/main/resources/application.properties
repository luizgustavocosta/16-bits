# For H2
quarkus.datasource.db-kind=h2
quarkus.datasource.jdbc.url=jdbc:h2:mem:default;DB_CLOSE_DELAY=-1
quarkus.hibernate-orm.database.generation=drop-and-create

#
#quarkus.datasource."users".db-kind=h2
#quarkus.datasource."users".jdbc.url=jdbc:h2:mem:users;DB_CLOSE_DELAY=-1
#
#quarkus.datasource."item".db-kind=h2
#quarkus.datasource."item".jdbc.url=jdbc:h2:mem:item;DB_CLOSE_DELAY=-1
#
#quarkus.datasource."auction".db-kind=h2
#quarkus.datasource."auction".jdbc.url=jdbc:h2:mem:auction;DB_CLOSE_DELAY=-1

#How to load the data without sql

# For PostgreSQL
#quarkus.hibernate-orm."auction".datasource=auction
#quarkus.datasource."auction".db-kind=postgresql
#quarkus.datasource."auction".jdbc.url=jdbc:postgresql://localhost:5432/ecommerce
#quarkus.hibernate-orm."auction".database.generation=drop-and-create

#quarkus.hibernate-orm."item".datasource=item
#quarkus.datasource."item".db-kind=postgresql
#quarkus.datasource."item".jdbc.url=jdbc:postgresql://localhost:5432/store
#quarkus.hibernate-orm."item".database.generation=drop-and-create

#quarkus.hibernate-orm."users".database.generation=drop-and-create
#quarkus.hibernate-orm."users".datasource=users
#quarkus.datasource."users".db-kind=postgresql
#quarkus.datasource."users".jdbc.url=jdbc:postgresql://localhost:5432/backoffice

#Common
quarkus.hibernate-orm."auction".database.generation=create-drop
quarkus.hibernate-orm."item".database.generation=drop-and-create
quarkus.hibernate-orm."user".database.generation=drop-and-create

quarkus.mongodb.connection-string = mongodb+srv://user:pass@url


quarkus.ssl.native=true